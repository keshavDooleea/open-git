(()=>{"use strict";var e={792:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.Git=void 0;const s=t(518),r=t(58);o.Git=class{constructor(){this.GIT_COMMAND="git config --get remote.origin.url",this.initGitURL()}async initGitURL(){try{const e=await s.Process.runCommand(this.GIT_COMMAND);this.parseURL(e)}catch(e){console.log("Error while running command",e),r.VsCode.showMessage("No directory with Git found")}}parseURL(e){return e?e.startsWith("http")?this.openHTTPS(e):void this.openSSH(e):r.VsCode.showMessage("Git remote repository not found")}openHTTPS(e){const o=decodeURI(e).trim();return console.log("openHTTPS",e,o),r.VsCode.openURL(o)}openSSH(e){if(!e.includes("@")||!e.includes(":"))return r.VsCode.showMessage("Unknown Git repository");const[o,t]=e.split(":"),s=`https://${o.split("@")[1]}/${t}`;console.log("openSSH",e,s),r.VsCode.openURL(s)}}},518:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.Process=void 0;const s=t(496),r=t(81);class i{static getWorkingDirectory(){const e=s.window.activeTextEditor?.document.fileName;return s.workspace.workspaceFolders?.map((e=>e.uri.fsPath)).filter((o=>e?.startsWith(o)))[0]}}o.Process=i,i.runCommand=e=>{const o=i.getWorkingDirectory();return new Promise(((t,s)=>{(0,r.exec)(e,{cwd:o},((e,o)=>e?s(e):t(o)))}))}},58:(e,o,t)=>{Object.defineProperty(o,"__esModule",{value:!0}),o.VsCode=void 0;const s=t(496);o.VsCode=class{static showMessage(e){s.window.showInformationMessage(e)}static async openURL(e){this.showMessage(`Opening GIT: ${e}`);const o=await s.env.openExternal(s.Uri.parse(e))?"Opened Git repository":"An error occurred while opening repository";this.showMessage(o)}}},496:e=>{e.exports=require("vscode")},81:e=>{e.exports=require("child_process")}},o={};function t(s){var r=o[s];if(void 0!==r)return r.exports;var i=o[s]={exports:{}};return e[s](i,i.exports,t),i.exports}var s={};(()=>{var e=s;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const o=t(496),r=t(792);e.activate=function(e){let t=o.commands.registerCommand("opg.start",(()=>{new r.Git}));e.subscriptions.push(t)},e.deactivate=function(){}})(),module.exports=s})();