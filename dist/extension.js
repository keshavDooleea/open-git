(()=>{"use strict";var e={984:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.GitDisposable=void 0;const s=r(496),n=r(187),a=r(792);t.GitDisposable=class{constructor(e){this.context=e,this.disposables=[],this.git=new a.Git,this.managerHandler=new n.ManagerHandler}add(e,t){const r=s.commands.registerCommand(e,(()=>{const e=this.managerHandler.getManager(t);this.git.init(e)}));this.disposables.push(r)}subscribe(){this.disposables.forEach((e=>this.context.subscriptions.push(e)))}}},792:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Git=void 0;const s=r(58);t.Git=class{setManager(e){this.manager=e}async init(e){this.setManager(e),this.parseURL()}async parseURL(){try{const e=await this.manager.runCommand();this.openURL(e)}catch(e){const t=e;console.log("Error while running command",t),s.VsCode.showMessage(t.message)}}openURL(e){return e?e.startsWith("http")?this.manager.openHTTPS(e):void this.manager.openSSH(e):s.VsCode.showMessage("Git remote repository not found!")}}},775:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AbsManager=void 0;const s=r(518),n=r(58);t.AbsManager=class{constructor(){this.process=new s.Process}runCommand(){return this.process.runCommand()}getBaseHttpsURL(e){const[t]=e.split(".git");return t}getBaseSshURL(e){if(!e.includes("@")||!e.includes(":"))throw new Error("Unknown Git repository!");const[t,r]=e.split(":");return`https://${t.split("@")[1]}/${r}`}openURL(e,t){n.VsCode.openURL(e,t)}}},783:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DirectoryManager=void 0;const s=r(58),n=r(775);class a extends n.AbsManager{constructor(){super(...arguments),this.message="Opened Git repository"}openHTTPS(e){const t=this.getBaseHttpsURL(e);s.VsCode.openURL(t,this.message)}openSSH(e){const t=this.getBaseSshURL(e);s.VsCode.openURL(t,this.message)}}t.DirectoryManager=a},519:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FileManager=void 0;const s=r(58),n=r(775);class a extends n.AbsManager{openHTTPS(e){const t=this.getBaseHttpsURL(e);this.openFile(t)}openSSH(e){const t=this.getBaseSshURL(e);this.openFile(t)}async getCurrentBranch(){return Promise.resolve("master")||"master"}getLastTextFromURL(e){return e.split("/").pop()}async openFile(e){const t=this.getLastTextFromURL(e),r=this.process.getFileName();if(!r||!t)return s.VsCode.showMessage("No file is currently opened!");const n=r.split(t)[1];if(!n)return s.VsCode.showMessage("Sorry, this file can't be opened!");let a=`${e}/blob/${await this.getCurrentBranch()}${n}`;a=a.replace(/\\/g,"/");const o=`Opened ${this.getLastTextFromURL(a)}`;s.VsCode.openURL(a,o)}}t.FileManager=a},187:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FileManager=t.DirectoryManager=t.Manager=t.ManagerHandler=t.AbsManager=void 0;const s=r(775);Object.defineProperty(t,"AbsManager",{enumerable:!0,get:function(){return s.AbsManager}});const n=r(436);Object.defineProperty(t,"ManagerHandler",{enumerable:!0,get:function(){return n.ManagerHandler}}),Object.defineProperty(t,"Manager",{enumerable:!0,get:function(){return n.Manager}});const a=r(783);Object.defineProperty(t,"DirectoryManager",{enumerable:!0,get:function(){return a.DirectoryManager}});const o=r(519);Object.defineProperty(t,"FileManager",{enumerable:!0,get:function(){return o.FileManager}})},436:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ManagerHandler=t.Manager=void 0;const s=r(187);var n;!function(e){e[e.DIRECTORY=0]="DIRECTORY",e[e.FILE=1]="FILE"}(n=t.Manager||(t.Manager={})),t.ManagerHandler=class{get directoryManager(){return this._directoryManager||(this._directoryManager=new s.DirectoryManager),this._directoryManager}get fileManager(){return this._fileManager||(this._fileManager=new s.FileManager),this._fileManager}getManager(e){switch(e){case n.DIRECTORY:return this.directoryManager;case n.FILE:return this.fileManager}}}},518:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Process=void 0;const s=r(496),n=r(81),a=r(17);t.Process=class{constructor(){this.GIT_COMMAND="git config --get remote.origin.url",this.runCommand=()=>{const e=this.getWorkingDirectory();return new Promise(((t,r)=>{(0,n.exec)(this.GIT_COMMAND,{cwd:e},((e,s)=>e?r(new Error("No directory with Git found!")):t(s)))}))}}getWorkingDirectory(){const e=this.getFileName();if(e)return(0,a.dirname)(e);const t=s.workspace.workspaceFolders;if(!t||0===t.length)throw new Error("No directory opened!");return t[0].uri.fsPath}getFileName(){return s.window.activeTextEditor?.document.fileName}}},58:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.VsCode=void 0;const s=r(496);t.VsCode=class{static showMessage(e){s.window.showInformationMessage(e)}static async openURL(e,t){const r=await s.env.openExternal(s.Uri.parse(e))?t:"An error occurred while opening repository";this.showMessage(r)}}},496:e=>{e.exports=require("vscode")},81:e=>{e.exports=require("child_process")},17:e=>{e.exports=require("path")}},t={};function r(s){var n=t[s];if(void 0!==n)return n.exports;var a=t[s]={exports:{}};return e[s](a,a.exports,r),a.exports}var s={};(()=>{var e=s;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const t=r(984),n=r(187);e.activate=function(e){const r=new t.GitDisposable(e);r.add("open-git-dir",n.Manager.DIRECTORY),r.add("open-git-file",n.Manager.FILE),r.subscribe()},e.deactivate=function(){}})(),module.exports=s})();